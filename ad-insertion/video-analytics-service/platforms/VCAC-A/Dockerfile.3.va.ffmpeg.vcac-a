# video_analytics_service_ffmpeg_vcac_a
ARG base_name=vcac-a-ubuntu1604-openvino-ffmpeg-va

FROM ${base_name}
 
# Fetch python3 and Install python3
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends libgirepository-1.0-1 libsoup2.4.1 python3-gi python3-requests python3-tornado python3-pip python3-setuptools python3-wheel &&  \
    rm -rf /var/lib/apt/lists/*;

RUN apt-get update \
    && apt-get install --no-install-recommends -y git

ARG VA_SERVING_REPO=https://github.com/intel/video-analytics-serving.git
ARG VA_SERVING_VER=v0.2.0-alpha 
RUN git clone ${VA_SERVING_REPO} \
    && cd video-analytics-serving \
    && git checkout ${VA_SERVING_VER} \
    && cp service/app/server/requirements.txt /requirements.txt \
    && mkdir /home/video-analytics \
    && mv service/app /home/video-analytics/app \
    && cd .. \
    && rm -rf video-analytics-serving

RUN pip3 install  --no-cache-dir -r /requirements.txt
RUN pip3 install kafka-python==1.3.2
RUN pip3 install kazoo==2.2.1

COPY ./models/ /home/video-analytics/models/
COPY ./gallery/ /home/video-analytics/gallery/
COPY ./platforms/VCAC-A/pipelines/ffmpeg /home/video-analytics/pipelines
COPY  ./feeder/*.py /home/video-analytics/feeder/
COPY   docker-entrypoint.sh /home/video-analytics/


WORKDIR /home/video-analytics

ENTRYPOINT ["./docker-entrypoint.sh", "--framework", "ffmpeg"]

####
ARG  USER
ARG  GROUP
ARG  UID
ARG  GID
## must use ; here to ignore user exist status code
RUN  groupadd -f -g ${GID} ${GROUP};useradd -d /home -g ${GROUP} -K UID_MIN=${UID} ${USER};chown -R ${USER}.${GROUP} /home; 
USER ${USER}
####
